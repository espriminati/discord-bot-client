//PLEASE DO NOT EDIT THIS FILE UNLESS YOU KNOW WHAT YOU ARE DOING

const electron = require('electron')
const { app, BrowserWindow, ipcMain } = require('electron')
const Discord = require("discord.js");
const _cli = new Discord.Client();
var appWindow;
var ready = false;

_cli.once('ready', () => {
	console.log("Logged in as " + _cli.user.tag);
	setUser(_cli.user.tag.split('#')[0], _cli.user.tag.split('#')[1]);
	_cli.guilds.forEach((guild) => {
        addServer(guild.name, "https://cdn.discordapp.com/icons/" + guild.id + "/" + guild.icon + ".webp?size=64", guild.id);
	})
	var guild = _cli.guilds.first();
	setServer(guild.name);
	var gotFirstChannel = false;
	guild.channels.forEach((channel) => {
		if (channel.type == "text"){
			addChannel(channel.name, channel.id);
			if (!gotFirstChannel)
				setChannel(channel.name);
		}
	})
	guild.members.forEach((member) => {
		var status = "";
		if (member.presence.game != null){
			if (member.presence.game.type == 0) status = "Playing ";
			else if (member.presence.game.type == 1) status = "Streaming ";
			else if (member.presence.game.type == 2) status = "Listening ";
			else if (member.presence.game.type == 3) status = "Watching ";
			status += member.presence.game.name;
		}
		addUser(member.displayName, status)
	})
	appWindow.webContents.send('ready');
});

_cli.on('message', message => {
	addMessage(message.author.username, message.content, message.channel.id);
});

app.on('ready', function(){
	win = new BrowserWindow({
		width: 800,
		height: 600,
		webPreferences: {
			nodeIntegration: true
		},
	})
	win.loadFile('src/index.html')
	appWindow = win;
	appWindow.webContents.on('did-finish-load', function() {
		clearServers();
		clearChannels();
		clearMessages();
		clearUsers();
		setServer("Discord Bot-Alive");
		setChannel("Welcome");
		win.setMenuBarVisibility(false);
	});
	ready = true;
})

function addUsers(guild){
	clearUsers();
	guild.members.forEach((member) => {
		var status = "";
		if (member.presence.game != null){
			if (member.presence.game.type == 0) status = "Playing ";
			else if (member.presence.game.type == 1) status = "Streaming ";
			else if (member.presence.game.type == 2) status = "Listening ";
			else if (member.presence.game.type == 3) status = "Watching ";
			status += member.presence.game.name;
		}
		addUser(member.displayName, status)
	});
}


function sendMessage(channelID, message){
	channel = _cli.channels.find(x => x.id == channelID);
	channel.send(message);
	appWindow.webContents.send('clearInput');
}
function addServer(name, picture, id){
	appWindow.webContents.send('addServer', name, picture, id);
}
function clearServers(){ 
	appWindow.webContents.send('clearServers');
}
function addChannel(name, id){
	appWindow.webContents.send('addChannel', "#" + name, id);
}
function clearChannels(){ 
	appWindow.webContents.send('clearChannels');
}
function addMessage(username, message, id){
	appWindow.webContents.send('addMessage', username, message, id);
}
function clearMessages(){ 
	appWindow.webContents.send('clearMessages');
}
function addUser(username, status){
	appWindow.webContents.send('addUser', username, status);
}
function clearUsers(){ 
	appWindow.webContents.send('clearUsers');
}
function setChannel(name){
	appWindow.webContents.send('setChannel', name);
}
function setServer(name){
	appWindow.webContents.send('setServer', name);
}
function setUser(name, number){
	appWindow.webContents.send('setUser', name, number);
}
ipcMain.on("login", (event, token) => _cli.login(token));
ipcMain.on("sendMessage", (event, channelID, message) => sendMessage(channelID, message));
ipcMain.on("changeServer", (event, serverID) => {
	var server = _cli.guilds.get(serverID);
	clearChannels();
	server.channels.forEach((channel) => {
		if (channel.type == "text")
		addChannel(channel.name,channel.id);
	});
	addUsers(server);
});